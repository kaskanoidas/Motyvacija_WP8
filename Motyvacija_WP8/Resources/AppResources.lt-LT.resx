<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>lt-LT</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>"Goals, Rezults, Salary"</value>
  </data>
  <data name="SampleProperty" xml:space="preserve">
    <value>Sample Runtime Property Value</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>Apie</value>
  </data>
  <data name="AddNew" xml:space="preserve">
    <value>Dėti</value>
  </data>
  <data name="Archive" xml:space="preserve">
    <value>Archyvas</value>
  </data>
  <data name="BA" xml:space="preserve">
    <value>Bazinis atlyginimas</value>
  </data>
  <data name="BR" xml:space="preserve">
    <value>Bazinė reikšmė</value>
  </data>
  <data name="Calculate" xml:space="preserve">
    <value>Skaičiuoti</value>
  </data>
  <data name="Employees" xml:space="preserve">
    <value>Darbuotojai</value>
  </data>
  <data name="FR" xml:space="preserve">
    <value>Faktinė reikšmė</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Pagalba</value>
  </data>
  <data name="Indicators" xml:space="preserve">
    <value>Rodikliai</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Pasirinkti kalbą</value>
  </data>
  <data name="LanguageBarBack" xml:space="preserve">
    <value>Atgal</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>Meniu</value>
  </data>
  <data name="MKD" xml:space="preserve">
    <value>Maksimali kintama dalis</value>
  </data>
  <data name="ROD" xml:space="preserve">
    <value>Rodikliai</value>
  </data>
  <data name="SaveTA" xml:space="preserve">
    <value>Saugoti</value>
  </data>
  <data name="Tasks" xml:space="preserve">
    <value>Užduotys</value>
  </data>
  <data name="TR" xml:space="preserve">
    <value>Tikslinė reikšmė</value>
  </data>
  <data name="UZD" xml:space="preserve">
    <value>Užduotys</value>
  </data>
  <data name="VISO" xml:space="preserve">
    <value>Viso</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Gerai</value>
  </data>
  <data name="EDIT" xml:space="preserve">
    <value>Redaguoti</value>
  </data>
  <data name="EmployeeName" xml:space="preserve">
    <value>Vardas</value>
  </data>
  <data name="IV" xml:space="preserve">
    <value>Įvertinimas</value>
  </data>
  <data name="MaxIV" xml:space="preserve">
    <value>Maks. įvertinimas</value>
  </data>
  <data name="Pav" xml:space="preserve">
    <value>Pavadinimas</value>
  </data>
  <data name="MAXKDP" xml:space="preserve">
    <value>Maksimali kintama dalis pagal užduotis:</value>
  </data>
  <data name="AboutString" xml:space="preserve">
    <value>VEIKLA,  TIKSLAS,  MOTYVACIJA,  REZULTATAS,  ATLYGINIMAS - tai penkios sąvokos, kurios paliečia kiekvieną žmogų. Kiekvienas, kuris vykdo veiklą, turi tikslą, vidinę motyvaciją, pasiekia rezultatus ir už tai jam būna atlyginta. Vidinė motyvacija - pagrindinis tikslo siekimo variklis.

Tam, kad įmonės ar komandos tikslai taptų kiekvieno jos nario tikslais, būtina, kad kiekvienas dalyvautų šių tikslų formavime, nustatyme. Tuomet, įgyvendinant užsibrėžtus tikslus, atsiranda vidinė motyvacija, kuri padeda pasiekti geriausių rezultatų, o taip pat visi gauna atlyginimą pagal pasiektus rezultatus.

Šios programos paskirtis - apskaičiuoti darbuotojų kintamą atlyginimo dalį, kuri priklauso nuo įmonės ar komandos tikslų ir gautų rezultatų, įgyvendinant šiuos tikslus, o taip pat papildomą kintamą atlyginimo dalį, kuri priklauso nuo darbuotojo užduočių vykdymo, vartotojų vertinimo ar testų rezultatų.

Visa tai leidžia išvengti "Žmogiškojo faktoriaus" apskaičiuojant darbuotojų atlyginimus, nes visiems atlyginama pagal pasiektus rezultatus ir įmonės galimybes.

Šios programos pagrindą sudaro tikslo siekimo efektyvumo įvertinimo algoritmas, kuriame tikslai aprašomi pagrindiniais įmonės veiklos rodikliais.

Vertinant darbuotojų užduočių vykdymą arba vykdant vartotojų apklausą, kada vartotojai vertina įmonės darbuotojus, bei tikrinant kompetenciją ir žinias testų pagalba, apskaičiuojamas gauto įvertinimo efektyvumas maksimalaus galimo įvertinimo atžvilgiu.

Atsižvelgiant į tai, atlyginimas apskaičiuojamas taip:

ATLYGINIMAS  =  BAZINIS ATLYGINIMAS  +  KINTAMA DALIS PAGAL RODIKLIUS  +  KINTAMA DALIS PAGAL UŽDUOTIS

BAZINIS ATLYGINIMAS - tai fiksuota atlyginimo dalis, kuri nustatoma kiekvienam darbuotojui pagal įmonės galimybes, darbuotojo kompetenciją, pareigas, atsakomybes ir t.t. Kiekviena įmonė turi savo metodiką. Galima remtis ir valstybės nustatytu minimaliu atlyginimu.

KINTAMA DALIS PAGAL RODIKLIUS - tai svarbiausia atlyginimo dedamoji. Dauguma įmonių yra įdiegusios verslo veiklos valdymo sistemas, kurios paremtos rodiklių visuma. Prie tokių galima priskirti BSC (Balanced Score Card), Lean, TOC ir kitas. Visiems žinomi tokie rodikliai kaip PELNAS, KAŠTAI, GAMYBOS APIMTYS ir kiti, kuriuos tiesiog vadinsime RODIKLIS A,  RODIKLIS B,  RODIKLIS C ir t.t.

Įmonės, planuodamos savo veiklą, nustato savo tikslus ir tikslines rodiklių reikšmes: TIKSLINĖ A, TIKSLINĖ B,  TIKSLINĖ C ir t.t. ( padidinti PELNĄ , sumažinti KAŠTUS, padidinti GAMYBOS APIMTIS  ir panašiai). Turėdami šią informaciją, galime apskaičiuoti, koks gali būti maksimalus atlyginimų fondas, jei tikslai bus pasiekti, t.y. MAKSIMALIĄ KINTAMĄ DALĮ PAGAL RODIKLIUS (MaxKD RODIKLIŲ), o taip pat pagal rodiklių svarbą šią suma padaliname proporcingai rodikliams: MaxKD A,  MaxKD B,  MaxKD C ir t.t.

MaxKD RODIKLIŲ = MaxKD A +  MaxKD B  +  MaxKD C  + …

Analogiškai, kiekvienam darbuotojui, pagal pasirinktus rodiklius nustatome maksimalias kintamas dalis. Žinodami BAZINES (pradines) rodiklių reikšmes: BAZINĖ A,  BAZINĖ B,  BAZINĖ C ir t.t., TIKSLINES: TIKSLINĖ A,  TIKSLINĖ B,  TIKSLINĖ C  ir t.t., ir pasirinktu momentu pamatavę FAKTINES RODIKLIŲ REIKŠMES:  FAKTINĖ A,  FAKTINĖ B,  FAKTINĖ C ir t.t., apskaičiuojame kintamas atlyginimo dalis pagal rodiklius: KINTAMA  A,  KINTAMA B,  KINTAMA C ir t.t. Tokiu būdu:

KINTAMA DALIS PAGAL RODIKLIUS = KINTAMA  A  +  KINTAMA B  +  KINTAMA C  + …

KINTAMA DALIS PAGAL UŽDUOTIS - jeigu įmonių darbuotojai vykdo įvairias užduotis, tenka vertinti šių užduočių atlikimo efektyvumą. Darbuotojas gali vykdyti keletą užduočių:  UŽDUOTIS X,  UŽDUOTIS Y,  UŽDUOTIS Z  ir t.t. Užduotys pagal savo svarbą gali būti vertinamos skirtingose balų skalėse ( sistemose), t.y. maksimalus įvertinimas kiekvienos užduoties gali būti skirtingas. Mokykloje mes įpratę, kad visi dalykai vertinami vienoje balų skalėje, pvz. maksimalus įvertinimas visų dalykų yra 10. Maksimalius užduočių vertinimus žymėkime: MaxVERT  X,  MaxVERT  Y,  MaxVERT  Z ir t.t. Jei darbuotojas pilnai įvykdo visas užduotis ir gauna maksimalius įvertinimus, tai jis gaus MAKSIMALIĄ KINTAMĄ DALĮ PAGAL UŽDUOTIS ( MaxKDU), kuri nustatoma pagal įmonės galimybes ir užduočių svarbą įmonės tikslų įgyvendinime.

PAVYZDYS : elementariu pvyzdžiu pailiustruosime programos veikimą. Tegul įmonės tikslai aprašomi dviem rodikliais : A - PELNAS ir B - KAŠTAI.

Vyr. vadybininkas MARKO  (įvedame programoje į darbuotojų sąrašą), atlikdamas jam pavestus darbus, įtakoja šiuos rodiklius. BAZINIS ATLYGINIMAS MARKO įvedamas : BAZINIS = 1000. įvedame rodiklių reikšmes:

PELNAS :  BAZINĖ 100000;  TIKSLINĖ  130000;  FAKTINĖ 121000;
KAŠTAI  :  BAZINĖ 500000;  TIKSLINĖ 450000;  FAKTINĖ 480000;

MARKO dar yra motyvuojamas pagal UŽDUOČIŲ vykdymą:

X- SANTYKIS SU KLIENTAIS   MaxVERT = 11  Įvertintas  9;
Y- PREKIŲ GRAŽINIMŲ MINIMIZAVIMAS  MaxVERT  = 9  Įvertintas  5;
Z- KVALIFIKACIJOS KĖLIMAS  MaxVERT = 7; Įvertintas 6;

Jei įmonė pasiektų tikslus pagal šiuos rodiklius ir MARKO gautų aukščiausius įvertinimus pagal užduočių vykdymą, tai įmonė papildomai išmokėtų jam MAKSIMALIĄ KINTAMĄ DALĮ  2700:

Pagal PELNO rodiklį įvedame MaxKD 1200;
Pagal KAŠTŲ rodiklį įvedame MaxKD 800;
Pagal UŽDUOČIŲ vykdymą MaxKDU 700;

Tačiau suskaičiavę prie faktinių rodiklių reikšmių ir faktinių užduočių įvertinimų gauname, kad KINTAMA ATLYGINIMO DALIS  yra 1679:

KINTAMA DALIS PAGAL RODIKLIUS  1160;
KINTAMA DALIS PAGAL UŽDUOTIS  519;

Iš viso šį mėnesį uždirbo:

ATLYGINIMAS = 1000 + 1160 + 519 = 2679;
Maksimaliai galėjo uždirbti 3700.</value>
  </data>
  <data name="Page" xml:space="preserve">
    <value>Puslapis</value>
  </data>
  <data name="BAT" xml:space="preserve">
    <value>Bazinis</value>
  </data>
  <data name="BRT" xml:space="preserve">
    <value>Bazinė</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="FRT" xml:space="preserve">
    <value>Faktinė</value>
  </data>
  <data name="MKDT" xml:space="preserve">
    <value>Max. k. d.</value>
  </data>
  <data name="RODT" xml:space="preserve">
    <value>Rodikliai</value>
  </data>
  <data name="SHOW" xml:space="preserve">
    <value>Rodyti</value>
  </data>
  <data name="TRT" xml:space="preserve">
    <value>Tikslinė</value>
  </data>
  <data name="UZDT" xml:space="preserve">
    <value>Užduotys</value>
  </data>
  <data name="VISOT" xml:space="preserve">
    <value>Viso</value>
  </data>
</root>